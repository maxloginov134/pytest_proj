from utils import arrs


def test_get():
    """
    Возвращает второй элемент списка при индексе, равному 1.
    :return:
    """
    assert arrs.get([1, 2, 3], 1, "test") == 2


def test_get_2():
    """
    Возвращает первый элемент списка при индексе, равному 0.
    """
    assert arrs.get([1, 2, 3], 0, "test") == 1


def test_get_3():
    """
    Возвращает значение по умолчанию элемент списка при отрицательном индексе.
    """
    assert arrs.get([1, 2, 3], -1, "test") == "test"



def test_slice():
    """
    Возвращает часть исходного списка при индексах, равным 1, 3
    """
    assert arrs.my_slice([1, 2, 3, 4], 1, 3) == [2, 3]


def test_slice_2():
    """
    Возращает часть исходного списка при индеексах, равным 1
    :return:
    """
    assert arrs.my_slice([1, 2, 3], 1) == [2, 3]


def test_slice_3():
    """
    Возвращает пустой список
    """
    assert arrs.my_slice([]) == []


def test_slice_4():
    """
    Возвращает часть исходного списка при отрицательном индексе
    """
    assert arrs.my_slice([1, 2, 3, 4], -1) == [4]


def test_slice_5():
    """
    Возвращает целый списк при отрицательном стартовом индексе меньше длинны списка
    """
    assert arrs.my_slice([1, 2, 3], -5) == [1, 2, 3]